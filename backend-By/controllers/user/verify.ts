import { Request, Response } from "express";
import jwt from "jsonwebtoken";
import { prisma } from "../../utils/prisma"; // prisma client —ç–Ω–¥ –±–∞–π–≥–∞–∞ –±–æ–ª

export const verify = async (request: Request, response: Response) => {
  const { token } = request.body;
  const tokenPassword = "BuyMeCoffe";

  try {
    const isValid = jwt.verify(token, tokenPassword);
    if (isValid) {
      const destructToken: any = jwt.decode(token);
      const userId = destructToken.userId;

      // üî• Prisma –∞—à–∏–≥–ª–∞–∂ —Ö—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–Ω –ø—Ä–æ—Ñ–∞–π–ª –∞–≤—á –±–∞–π–Ω–∞
      const user = await prisma.user.findUnique({
        where: { id: userId },
        include: {
          profile: true, // –ø—Ä–æ—Ñ–∞–π–ª —Ö“Ø—Å–Ω—ç–≥—Ç —Ö–æ–ª–±–æ—Å–æ–Ω –≥—ç–∂ “Ø–∑—Å—ç–Ω
        },
      });

      if (!user) {
        return response.status(404).send({ message: "User not found" });
      }

      // ‚úîÔ∏è frontend —Ä“Ø“Ø –±—É—Ü–∞–∞–∂ –±–∞–π–Ω–∞
      response.send({
        destructToken,
        user,
      });
      return;
    } else {
      response.status(401).send({ message: "Token is not valid" });
      return;
    }
  } catch (err) {
    response.status(401).send({ message: "Token is invalid" });
    return;
  }
};
